name: CurseForge Upload

on:
  pull_request:
    branches: [ "1.12.2", "1.14.4", "1.15.2", "1.20.x" ]
    types: ["closed"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.12
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Python dependencies
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        run: |
          python -m pip install requests

      - name: Runnable gradlew
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        run: |
          sudo chmod +x gradlew

      - name: Set up JDK 17
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Install Lua 5.2
        run: |
          sudo apt update
          sudo apt install -y lua5.2

      - name: Cache Gradle packages
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.properties') }}
      
      - name: Test
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        run: |
          ./gradlew test | tee testResults.txt
          
          if  grep -q "FAILED" testResults.txt; then
              echo "Tests failed"
              exit 1
          else
            if  grep -q "BUILD SUCCESSFUL" testResults.txt; then
                echo "Tests Passed"
            else
                echo "unexpected behavior"
                exit 1
            fi
          fi

      - name: Curse Forge API Secret
        env:
          CURSE_FORGE_API_TOKEN: ${{ secrets.CURSE_FORGE_API_TOKEN }}

      - name: Build
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        run: |
          ./gradlew shadowJar | tee buildResult.txt
          
          if  grep -q "FAILED" buildResult.txt; then
              echo "Build failed"
              exit 1
          else
            if  grep -q "BUILD SUCCESSFUL" buildResult.txt; then
                echo "Build Passed"
            else
                echo "unexpected behavior"
                exit 1
            fi
          fi

      - name: Upload NeoForge
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        run: |
          python workflow/upload.py "neoforge" "neoforge/build/libs"
          echo "NeoForge jar uploaded"
      
      - name: Upload Fabric
        if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
        run: |
          python workflow/upload.py "fabric" "fabric/build/libs"

          echo "NeoForge jar uploaded"